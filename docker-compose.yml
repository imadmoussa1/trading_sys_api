version: '3.3'

services:
  # add nginx service
  nginx:
    image: nginx:alpine
    container_name: 'nginx'
    depends_on:
      - trade-api
    ports:
      - 80:80
      # - 443:443
    networks:
      - db
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot

  # Cerbot service to shh connection
  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot

  trade-api:
    # this is used for development only, use the tagged registry image instead
    build: .
    container_name: 'trade-api'
    ports:
      - 5000:5000
    depends_on:
      - postgres
      - mongo
    secrets:
      - postgres_uri
      - mongo_uri
      - fxcm
    environment:
      # flush python stdout
      - AUTHLIB_INSECURE_TRANSPORT=true
      - PYTHONUNBUFFERED=1
    env_file:
      - ./configs/global.env
    networks:
      - db
    volumes:
      - ./trade_api:/var/app

  mongo:
    image: mongo
    hostname: mongo
    container_name: 'mongo'
    ports:
      - 27017:27017
    secrets:
      - mongo_admin_username
      - mongo_admin_password
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/mongo_admin_username
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo_admin_password
    networks:
      - db
    volumes:
      - mongo-volume:/data/db

  postgres:
    image: postgres:11.0
    container_name: 'postgres'
    restart: always
    ports:
      - 5432:5432
    secrets:
      - postgres_admin_username
      - postgres_admin_password
      - postgres_db_name
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_admin_username
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_admin_password
      POSTGRES_DB_FILE: /run/secrets/postgres_db_name
    networks:
      - db
    volumes:
      - postgres-volume:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: 'pgadmin'
    restart: always
    ports:
      - 8082:80
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: test@test.com
      PGADMIN_DEFAULT_PASSWORD: pgadminpassword
    networks:
      - db
    volumes:
      - pgadmin-volume:/var/lib/pgadmin

  charts:
    image: quay.io/mongodb/charts:v0.10.0
    hostname: charts
    container_name: charts
    ports:
      - 8083:80
    depends_on:
      - mongo
    volumes:
      - keys:/mongodb-charts/volumes/keys
      - logs:/mongodb-charts/volumes/logs
      - db-certs:/mongodb-charts/volumes/db-certs
      - web-certs:/mongodb-charts/volumes/web-certs
    environment:
      CHARTS_SUPPORT_WIDGET_AND_METRICS: "on"
    networks:
      - db
    secrets:
      - charts-mongodb-uri

networks:
  db:
    # this is used for development only
    driver: bridge

secrets:
  mongo_admin_username:
    file: ./secrets/mongo_admin_username.txt
  mongo_admin_password:
    file: ./secrets/mongo_admin_password.txt
  mongo_uri:
    file: ./secrets/mongo_uri.txt
  postgres_admin_username:
    file: ./secrets/postgres_admin_username.txt
  postgres_admin_password:
    file: ./secrets/postgres_admin_password.txt
  postgres_db_name:
    file: ./secrets/postgres_db_name.txt
  postgres_uri:
    file: ./secrets/postgres_uri.txt
  charts-mongodb-uri:
    file: ./secrets/charts_mongodb_uri.txt
  fxcm:
    file: ./secrets/fxcm.cfg

volumes:
  mongo-volume:
  postgres-volume:
  pgadmin-volume:
  keys:
  logs:
  db-certs:
  web-certs:
